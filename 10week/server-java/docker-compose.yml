version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: '1'      # 2코어 중 1.5코어 사용
          memory: 768M     # 1GB 중 768MB 사용 (시스템용 여유 확보)
        reservations:
          cpus: '0.5'
          memory: 256M
  mysql:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql

  redis:
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/:/data
    command: redis-server --appendonly yes
    restart: always
  kafka:
    image: public.ecr.aws/bitnami/kafka:3.5.1
    ports:
      - "9094:9094"
    volumes:
      - kafka-data:/bitnami/kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@127.0.0.1:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

volumes:
  mysql-5-7-data:
  redis_data:
  redis_config:
  kafka-zookeeper-data:
  kafka-data:

networks:
  default:
    driver: bridge